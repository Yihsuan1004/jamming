{"version":3,"sources":["util/Spotify.js","components/SearchBar/SearchBar.js","components/Track/Track.js","components/TrackList/TrackList.js","components/SearchResults/SearchResults.js","components/PlayList/PlayList.js","components/App/App.js","index.js"],"names":["accessToken","SearchBar","props","search","onSearch","state","term","handleTermChange","e","setState","target","value","className","onChange","this","placeholder","onClick","React","Component","Track","addTrack","bind","removeTrack","isRemoval","onAdd","track","onRemove","name","artist","album","renderAction","TrackList","tracks","map","id","SearchResults","searchResults","PlayList","handleNameChange","onNameChange","defaultValue","type","playlistTracks","onSave","Spotify","getAccessToken","accessTokenMatch","window","location","href","match","expiresInMatch","expiresIn","Number","setTimeout","history","pushState","accessUrl","fetch","headers","Authorization","then","res","json","jsonRes","items","artists","uri","savePlayList","trackUris","length","userId","method","body","JSON","stringify","playlistId","uris","App","find","saveTrack","push","filter","current","updatePlaylistName","playlistName","savePlaylist","alert","Sportify","document","title","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f8de6f4c.chunk.js","sourcesContent":["const clientId = '368d45597ed24cb9ba11850e184e6b01';\r\nconst redirectUrl = 'http://localhost:3000';\r\nlet accessToken;\r\nconst Spotify = {\r\n    getAccessToken(){\r\n        if( accessToken ){\r\n            return accessToken;\r\n        }\r\n        // check for access token match\r\n        const accessTokenMatch = window.location.href.match(/access_token=([^&]*)/);\r\n        const expiresInMatch = window.location.href.match(/expires_in=([^&]*)/);\r\n\r\n        if(accessTokenMatch && expiresInMatch){\r\n            accessToken = accessTokenMatch[1];\r\n            const expiresIn = Number(expiresInMatch[1]);\r\n            window.setTimeout(() => accessToken = '', expiresIn * 1000); \r\n            window.history.pushState('Access Token', null ,'/');\r\n            return accessToken;\r\n        }\r\n        else{\r\n            const accessUrl = `https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectUrl}`\r\n            window.location = accessUrl;\r\n        }\r\n\r\n    },\r\n    search(term){\r\n        const accessToken = Spotify.getAccessToken();\r\n        return fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`,\r\n            {\r\n                headers: {\r\n                    Authorization: `Bearer ${accessToken}`\r\n                }\r\n            }\r\n        ).then(res =>{\r\n            return res.json()\r\n        }).then(jsonRes => {\r\n            if(!jsonRes.tracks){\r\n                return [];\r\n            }\r\n            return jsonRes.tracks.items.map(track => ({\r\n                id: track.id,\r\n                name: track.name,\r\n                artist: track.artists[0].name,\r\n                album: track.album.name,\r\n                uri: track.uri\r\n            }))\r\n        });\r\n    },\r\n\r\n    savePlayList(name, trackUris){\r\n        if(!name || !trackUris.length){\r\n            return;\r\n        }\r\n        const accessToken = Spotify.getAccessToken();\r\n        const headers = { Authorization : `Bearer ${accessToken}`};\r\n        let userId;\r\n        return fetch('https://api.spotify.com/v1/me',{ headers: headers}\r\n        ).then(res => res.json()\r\n        ).then(jsonRes => {\r\n            userId = jsonRes\r\n            return fetch(`https://api.spotify.com/v1/users/${userId}/playlists`,\r\n            {\r\n                headers: headers,\r\n                method: 'POST',\r\n                body: JSON.stringify({name : name})\r\n            })\r\n        }).then(res => res.json()\r\n        ).then(jsonRes =>{\r\n            const playlistId = jsonRes.id;\r\n            return fetch(`https://api.spotify.com/v1/users/${userId}/playlists/${playlistId}/tracks`,\r\n            {\r\n                headers: headers,\r\n                method: 'POST',\r\n                body: JSON.stringify({uris : trackUris})\r\n            })\r\n        })\r\n\r\n    }\r\n}\r\nexport default Spotify;","import \"./SearchBar.sass\";\r\nimport React from 'react';\r\n\r\nexport class SearchBar extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            term: ''\r\n        }\r\n    }\r\n    search = () =>{\r\n        this.props.onSearch(this.state.term);\r\n    }\r\n    handleTermChange = (e) => {\r\n        this.setState({term: e.target.value})\r\n    }\r\n    render(){\r\n        return <div className=\"SearchBar\">\r\n                    <input onChange={this.handleTermChange} placeholder=\"Enter A Song, Album, or Artist\" />\r\n                    <button className=\"SearchButton\" onClick={this.search}>SEARCH</button>\r\n                </div>\r\n        \r\n    }\r\n}","import \"./Track.sass\";\r\nimport React from 'react';\r\n\r\nclass Track extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.addTrack = this.addTrack.bind(this);\r\n        this.removeTrack = this.removeTrack.bind(this);\r\n\r\n    }\r\n    renderAction(){\r\n        if(this.props.isRemoval){\r\n            return<button className=\"Track-action\"  onClick={this.removeTrack}>-</button>\r\n        }\r\n        else{\r\n            return<button className=\"Track-action\" onClick={this.addTrack}>+</button>\r\n        }\r\n    }\r\n\r\n    addTrack(){\r\n        this.props.onAdd(this.props.track);\r\n    }\r\n    \r\n    removeTrack(){\r\n        this.props.onRemove(this.props.track);\r\n    }\r\n\r\n    render(){\r\n        return<div className=\"Track\">\r\n        <div className=\"Track-information\">\r\n            <h3>\r\n              {this.props.track.name}\r\n            </h3>\r\n            <p>\r\n                {this.props.track.artist} {this.props.track.album} \r\n            </p>\r\n        </div>\r\n        {this.renderAction()}\r\n      </div>\r\n        \r\n    }\r\n}\r\nexport default Track;","import \"./TrackList.sass\";\r\nimport React from 'react';\r\nimport Track from '../Track/Track'\r\n\r\nclass TrackList extends React.Component{\r\n    render(){\r\n        return  <div className=\"TrackList\">\r\n                        {\r\n                            this.props.tracks.map(track =>{\r\n                                return <Track   track={track} \r\n                                                key={track.id}\r\n                                                onAdd={this.props.onAdd}\r\n                                                onRemove={this.props.onRemove}\r\n                                                isRemoval={this.props.isRemoval}/>\r\n                                \r\n                            })\r\n                        }\r\n                    \r\n                </div>\r\n        \r\n\r\n    }\r\n}\r\nexport default TrackList;","import \"./SearchResults.sass\";\r\nimport React from 'react';\r\nimport TrackList from '../TrackList/TrackList'\r\n\r\nclass SearchResults extends React.Component{\r\n    render(){\r\n        return <div className=\"SearchResults\">\r\n                    <h2>Results</h2>\r\n                    <TrackList tracks={this.props.searchResults}\r\n                                onAdd={this.props.onAdd}\r\n                                isRemoval={false}/>\r\n                </div>\r\n        \r\n    }\r\n}\r\nexport default SearchResults;","import \"./PlayList.sass\";\r\nimport React from 'react';\r\nimport  TrackList  from \"../TrackList/TrackList\";\r\n\r\nclass PlayList extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.handleNameChange = this.handleNameChange.bind(this);\r\n    }\r\n\r\n   handleNameChange(e){\r\n       this.props.onNameChange(e.target.value);\r\n   }\r\n\r\n    render(){\r\n        return <div className=\"Playlist\">\r\n                    <input defaultValue=\"New Playlist\" type=\"text\" onChange={this.handleNameChange}/>\r\n                    <TrackList tracks={this.props.playlistTracks} onRemove={this.props.onRemove} isRemoval={true}/>\r\n                    <button className=\"Playlist-save\" onClick={this.props.onSave}>SAVE TO SPOTIFY</button>\r\n                </div>\r\n    }\r\n}\r\nexport default PlayList","import React from 'react';\nimport \"./App.sass\";\nimport {SearchBar} from \"../SearchBar/SearchBar\"\nimport SearchResults from \"../SearchResults/SearchResults\"\nimport PlayList from \"../PlayList/PlayList\"\nimport Sportify from '../../util/Spotify';\n\nexport default class App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      searchResults: [],\n      playlistName: 'myPlayList',\n      playlistTracks:[]\n    }\n  }\n\n  // Use the track’s id property to check if the current song is in the playlistTracks state.\n  // If the id is new, add the song to the end of the playlist.\n  // Set the new state of the playlist\n  addTrack = (track) =>{\n    let tracks = this.state.playlistTracks;\n    if(tracks.find(saveTrack => saveTrack.id === track.id)){\n      return;\n    }\n    else{\n      tracks.push(track);\n      this.setState({playlistTracks: tracks});\n    }\n  }\n  \n  removeTrack = (track) => {\n    let tracks = this.state.playlistTracks;\n    tracks = tracks.filter(current => current.id !== track.id);\n    this.setState({playlistTracks: tracks});\n  }\n\n  updatePlaylistName = (name) => {\n    this.setState({playlistName: name});\n  }\n\n  savePlaylist = () =>{\n    alert('success!');\n    const trackUris = this.state.playlistTracks.map(track => track.uri);\n    Sportify.savePlayList(this.state.playlistName,trackUris).then(()=>{\n      this.setState({\n        playlistName: 'New PlayList',\n        playlistTracks: []\n      })\n    })\n  }\n\n  search = (term) =>{\n    Sportify.search(term).then(searchResults => {\n      this.setState({searchResults : searchResults});\n    })\n  }\n\n  render(){\n    document.title = 'Jamming'\n    return (\n      <div>\n        <h1>Ja<span className=\"highlight\">mmm</span>ing</h1>\n        <div className=\"App\">\n          <SearchBar onSearch={this.search}/>\n          <div className=\"App-playlist\">\n          <SearchResults searchResults={this.state.searchResults} onAdd={this.addTrack}/>\n          <PlayList playlistName={this.state.playlistName}\n                    playlistTracks={this.state.playlistTracks}\n                    onNameChange={this.updatePlaylistName}\n                    onSave={this.savePlaylist}\n                    onRemove={this.removeTrack}/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n// https://open.spotify.com/track/0tSV3MPn8u8GlgQyraIFQ9?si=52facc58d9b44f63\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/sass/main.sass';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}